name: "inngest_remote_state"

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    paths:
      - "!examples/**"
      - "**/*.py"
      - ".github/**"
      - "Makefile"
      - "constraints.txt"
      - "pyproject.toml"
      - "pytest.ini"
      - "ruff.toml"

jobs:
  itest:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.9", "3.12"]
    timeout-minutes: 2
    steps:
      - uses: "actions/checkout@v2"
      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install"
        run: "make install"
      - name: "Integration test"
        run: "make itest"
        working-directory: "./pkg/inngest_remote_state"

  lint:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.9", "3.12"]
    steps:
      - uses: "actions/checkout@v2"
      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install"
        run: "make install"
      - name: "Lint"
        run: "make lint"
        working-directory: "./pkg/inngest_remote_state"

  publish-pypi:
    runs-on: "ubuntu-latest"
    needs:
      - "itest"
      - "lint"
      - "type-check"
      - "utest"

    # Only publish tagged versions.
    # TODO: Add a check to ensure that the git tag matches the version.
    if: "startsWith(github.ref, 'refs/tags/inngest_remote_state@')"
    permissions:
      id-token: write
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: "actions/checkout@v2"
      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install"
        run: "make install"
      - name: "Build"
        run: "make build"
        working-directory: "./pkg/inngest_remote_state"
      - name: "Upload package to PyPI"
        uses: "pypa/gh-action-pypi-publish@release/v1"
        with:
          packages-dir: "./pkg/inngest_remote_state/dist"

  type-check:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.9", "3.12"]
    steps:
      - uses: "actions/checkout@v2"
      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install"
        run: "make install"
      - name: "Type check"
        run: "make type-check"
        working-directory: "./pkg/inngest_remote_state"

  utest:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.9", "3.12"]
    steps:
      - uses: "actions/checkout@v2"
      - name: "Set up Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install"
        run: "make install"
      - name: "Unit test"
        run: "make utest"
        working-directory: "./pkg/inngest_remote_state"
